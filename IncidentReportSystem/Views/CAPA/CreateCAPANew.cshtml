@model IncidentReportSystem.Models.NewCAPAModel

<link href="~/Scripts/JQueryUI/jquery-ui.css" rel="stylesheet" />
<link href="~/Scripts/JQueryUI/jquery-ui.theme.css" rel="stylesheet" />
<link href="~/Scripts/JQueryUI/jquery-ui.structure.css" rel="stylesheet" />
<link href="~/Content/themes/TxtBoxStyles.css" rel="stylesheet">

<script src="~/Scripts/JQueryUI/jquery-ui.js"></script>
@*<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>*@

@{
    ViewBag.Title = "CreateCAPANew";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    html {
        overflow: scroll;
    }

    .col1 {
        padding-left: 30%;
    }
</style>

@using (Html.BeginForm("CreateCAPANew", "CAPA", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="div-border" style="width: 60%;">
            <h1 class="div-h1"><span class="div-h1-span">&nbsp;Create/Edit CAPA &nbsp;</span></h1>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.CreateCAPA.CAPAID)
            @Html.HiddenFor(m => m.CreateCAPA.StatusID)
            @Html.HiddenFor(m => m.CreateCAPA.FileName)
            @Html.HiddenFor(m => m.CreateCAPA.ImageFile)

        <div class="container-fluid">

            <!-- Type of Audit -->
            <div class="row">
                <div class="col-lg-6 col1">
                    <label>Type Of Audit<span style="color:red"> *</span></label>
                </div>
                <div class="col-lg-pull-6">
                    @Html.DropDownListFor(model => model.CreateCAPA.AuditTypeID,
                                          new SelectList(Model.AuditType, "ID", "Name"), "--Select--",
                                          new { @class = "form-control input-sm", style = "width: 300px" })
                    @Html.ValidationMessageFor(model => model.CreateCAPA.AuditTypeID, "", new { @class = "label label-danger" })
                </div>
            </div><br />

            <!-- CAPA Source -->
            <div class="row">
                <div class="col-lg-6 col1">
                    <label>CAPA Source<span style="color:red"> *</span></label>
                </div>
                <div class="col-lg-push-6">
                    @Html.DropDownListFor(model => model.CreateCAPA.CAPASourceID,
                                          new SelectList(Model.CAPASource, "ID", "Name"), "--Select--",
                                          new { @class = "form-control input-sm", style = "width: 280px" })
                    @Html.ValidationMessageFor(model => model.CreateCAPA.CAPASourceID, "", new { @class = "label label-danger" })
                </div>
            </div><br />

            <!-- Report Date -->
            <div class="row">
                <div class="col-lg-6 col1">
                    <label>Report Date</label>
                </div>
                <div class="col-lg-offset-6">
                    @Html.EditorFor(model => model.CreateCAPA.AuditTime,
                                    new { htmlAttributes = new { @class = "form-control date-time-picker", style = "width: 300px;" } })
                </div>
            </div><br />

            <!-- Reported By -->
            <div class="row">
                <div class="col-lg-6 col1">
                    <label>Reported By <span style="color:red"> *</span></label>
                </div>
                <div class="col-lg-offset-6">
                    @Html.DropDownListFor(model => model.CreateCAPA.ContractorEmpID,
                                          new SelectList(Model.contractorEmp, "ID", "Name"),
                                          new { @class = "form-control input-sm", style = "width: 300px" })
                    @Html.ValidationMessageFor(model => model.CreateCAPA.ContractorEmpID, "", new { @class = "label label-danger" })
                </div>
            </div><br />

            <!-- Remarks -->
            <div class="row">
                <div class="col-lg-6 col1">
                    @*<div class="input-container">*@
                        <label >Remarks</label>
                    </div>
                    <div class="col-lg-offset-6">
                        @Html.TextAreaFor(model => model.CreateCAPA.ReportedDetail, new { style = "Width:300px", @maxlength = 200 })
                    </div>
                @*</div>*@
                </div><br />

            <!-- Attachments -->
            <div class="row">
                <div class="col-lg-6 col1">
                    <label>Attachments</label>
                </div>
                <div class="col-lg-offset-6">
                    @Html.TextBoxFor(m => m.CreateCAPA.ImageFile, new { type = "file", value = "test" })
                    @Html.DisplayFor(m => m.CreateCAPA.FileName)
                </div>
            </div><br />

            <!-- Error Handling -->
            <div class="text-center">
                @if (ViewBag.IsValidationFailed == true)
                {
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <strong>@Html.ValidationMessage("ValidationError")</strong>
                    </div>
                }
            </div>

            
                @*<form>
                    <span class="text-center">login</span>
                    <div class="input-container">
                        <input type="text" required="" />
                        <label>Full Name</label>
                    </div>
                    <div class="input-container">
                        <input type="email" required="" />
                        <label>Email</label>
                    </div>
                    <button type="button" class="btn">submit</button>
                </form>*@
            

            @*<div class="form-group">

            <input type="text" id="name" placeholder="Name" autocomplete="off">
            <label for="name">Name</label>
        </div>*@

            <!-- Submit Button -->
            <div class="text-center">
                <button class="btn btn-primary" type="submit" id="btnsubmit" title="Submit">Add Observations</button>
            </div>
            <br />
        </div>
        </div>
    </div>

    <!-- Session Message Alerts -->
    if (ViewBag.SessMessage != null)
    {
        <script type="text/javascript">
            alert("Newer session exists in another browser/system...Logout");
            window.location.href = "../Account/Login";
        </script>
    }

    if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            alert("@ViewBag.Message");
            window.location.href = '../CAPA/CAPAObservations?capaID=' + @Model.CreateCAPA.CAPAID;
        </script>
    }

    if (ViewBag.error != null)
    {
        <script type="text/javascript">
            alert("@ViewBag.error");
        </script>
    }

}

@section Scripts {
    @Scripts.Render("~/Scripts/select2.js")
    @Scripts.Render("~/Scripts/select2.min.js")
    @Styles.Render("~/Content/select2.css")
    @Styles.Render("~/Content/select2.min.css")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            // Initialize date picker
            $("#CreateCAPA_AuditTime").datepicker({
                dateFormat: 'dd/mm/yy',
                maxDate: new Date(),
            });

            // Initialize Select2 for better dropdowns
            $("#CreateCAPA_CAPASourceID").select2();

            // Handle AuditType change
            $("#CreateCAPA_AuditTypeID").change(function () {
                var select = $("#CreateCAPA_CAPASourceID");
                select.empty();
                select.append($('<option/>', {
                    value: "",
                    text: "-- Select --"
                }));

                var selectedAuditTypeID = $(this).val();
                if (selectedAuditTypeID != "") {
                    $.getJSON("../CAPA/GetAuditCAPAsource", { AuditID: selectedAuditTypeID }, function (data) {
                        $.each(data, function (index, itemData) {
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text
                            }));
                        });
                    });
                }
            });

            // Initial population of CAPA Source based on Audit Type
            var SourceIndex = 0;
            var select = $("#CreateCAPA_CAPASourceID");
            select.empty();
            select.append($('<option/>', {
                value: "",
                text: "--Select--"
            }));
            var selectedAuditTypeID = $("#CreateCAPA_AuditTypeID").val();
            if (selectedAuditTypeID != "") {
                $.getJSON("../CAPA/GetAuditCAPAsource", { AuditID: selectedAuditTypeID }, function (data) {
                    $.each(data, function (index, itemData) {
                        if (itemData.Value == '@Model.CreateCAPA.CAPASourceID') {
                            SourceIndex = index + 1;
                        }
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });

                    document.getElementById('CreateCAPA_CAPASourceID').selectedIndex = SourceIndex;
                });
            }
        });
    </script>
}
